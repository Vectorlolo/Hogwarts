HTML
TS
CSS
.example-container {
  width: 100%;
  height: 100%;
  margin: 12px;
  border: 1px solid #555;
}

mat-drawer-content {
  padding: 12px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.toolbar{
    background-color: #e7e3af;
}

.sidenav-content {
    display: flex;
    height: 100%;
    justify-content: center;
  }

.drawerContainer{
    width: 100%;
    height: 100%;
    background-color: #7d5436;
}

.option:hover{
    background-color: white;
    cursor: pointer;
}

@font-face {
    font-family: "Wizard";
    src: local("Wizard"), url(../assets/fonts/WizardWorld.ttf) format("truetype");
}

*:not(.iconfont) {
    font-family: wizard /* Replace with your custom font */, sans-serif !important; 
    /* Add !important to overwrite all elements */
  }








  .example-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
  .colorToolbar{
    background-color: #7d5436;  
  }
  
  .example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
  }
  
  h1.example-app-name {
    margin-left: 8px;
  }
  
  .example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
  }
  
  .example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
  }